generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String?
  role         Role     @default(USER)
  profile      Profile?
  events       Event[]  // ← opposite relation for Event.organizer
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Role {
  USER
  ARTIST
  ORGANIZER
  ADMIN
  VOLUNTEER
}

model Profile {
  id          String  @id @default(uuid())
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @unique
  displayName String
  bio         String?
  tags        Json?    // ← changed from String[] to Json?
  media       Json?
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  location    String?
  lat         Float?
  lng         Float?
  startAt     DateTime
  endAt       DateTime?
  capacity    Int?
  priceCents  Int?
  organizerId String
  organizer   User     @relation(fields: [organizerId], references: [id])
  createdAt   DateTime @default(now())
}

model Booking {
  id        String        @id @default(uuid())
  eventId   String
  userId    String
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model MapPost {
  id        String   @id @default(uuid())
  userId    String
  lat       Float
  lng       Float
  text      String
  startsAt  DateTime
  endsAt    DateTime?
  createdAt DateTime @default(now())
}
